{"ast":null,"code":"var _jsxFileName = \"/home/kishankant/Spring Project/PLWebsite/Frontend/src/components/Nation/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Loader from \"react-loaders\";\nimport { Link } from 'react-router-dom';\nimport \"./index.scss\";\nimport AnimatedLetters from \"../AnimatedLetters\";\nimport playerData from \"../../data/player.json\"; // Assuming you have this file with players' name and uri\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Players = () => {\n  _s();\n  const [letterClass, setLetterClass] = useState('text-animate');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredPlayers, setFilteredPlayers] = useState([]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLetterClass(\"text-animate-hover\");\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []); // Empty dependency array ensures this runs only once\n\n  // Filter players based on search query\n  useEffect(() => {\n    const filtered = playerData.players.filter(player => player.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    setFilteredPlayers(filtered);\n  }, [searchQuery]);\n\n  // Handle search input change\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  // Render player images, names, and a \"View\" button\n  const renderPlayers = players => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images-container\",\n      children: players.map((player, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: players.uri,\n          alt: \"players\",\n          classN: \"player-image\",\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn\",\n            to: `/data?player=${encodeURIComponent(player.name)}`,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container players-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: /*#__PURE__*/_jsxDEV(AnimatedLetters, {\n          letterClass: letterClass,\n          strArray: \"Players\".split(\"\"),\n          idx: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for players\",\n          value: searchQuery,\n          onChange: handleSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderPlayers(filteredPlayers)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"pacman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(Players, \"VYHhLD8Igi/9kj61AMom17DY3g4=\");\n_c = Players;\nexport default Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useEffect","useState","Loader","Link","AnimatedLetters","playerData","jsxDEV","_jsxDEV","Fragment","_Fragment","Players","_s","letterClass","setLetterClass","searchQuery","setSearchQuery","filteredPlayers","setFilteredPlayers","timer","setTimeout","clearTimeout","filtered","players","filter","player","name","toLowerCase","includes","handleSearchChange","event","target","value","renderPlayers","className","children","map","idx","src","uri","alt","classN","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","to","encodeURIComponent","strArray","split","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/kishankant/Spring Project/PLWebsite/Frontend/src/components/Nation/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Loader from \"react-loaders\";\nimport { Link } from 'react-router-dom';\nimport \"./index.scss\";\nimport AnimatedLetters from \"../AnimatedLetters\";\nimport playerData from \"../../data/player.json\"; // Assuming you have this file with players' name and uri\n\nconst Players = () => {\n    const [letterClass, setLetterClass] = useState('text-animate');\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filteredPlayers, setFilteredPlayers] = useState([]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setLetterClass(\"text-animate-hover\");\n        }, 3000); \n\n        return () => { \n            clearTimeout(timer);\n        };\n    }, []);  // Empty dependency array ensures this runs only once\n\n    // Filter players based on search query\n    useEffect(() => {\n      const filtered = playerData.players.filter(player =>\n          player.name.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n      setFilteredPlayers(filtered);\n    }, [searchQuery]);\n\n    // Handle search input change\n    const handleSearchChange = event => {\n        setSearchQuery(event.target.value);\n    };\n\n    // Render player images, names, and a \"View\" button\n    const renderPlayers = (players) => {\n        return (\n          <div className=\"images-container\">\n            {players.map((player, idx) => (\n              <div key={idx} className=\"image-box\">\n                <img src={players.uri} alt= \"players\" classN =\"player-image\" \n                  style={{ width: '100%', height: '100%' }}\n                />\n                <div className=\"content\">\n                  <p className=\"title\">{player.name}</p>\n                  <Link className=\"btn\" to={`/data?player=${encodeURIComponent(player.name)}`}>\n                    View\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        );\n    };\n\n    return (\n        <>\n          <div className=\"container players-page\">\n            <h1 className=\"page-title\">\n              <AnimatedLetters letterClass={letterClass} strArray={\"Players\".split(\"\")} idx={15} />\n            </h1>\n            <div className=\"search-bar\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for players\"\n                    value={searchQuery}\n                    onChange={handleSearchChange}\n                />\n            </div>\n            <div>{renderPlayers(filteredPlayers)}</div>\n          </div>\n          <Loader type=\"pacman\" />\n        </>\n    );\n};\n\nexport default Players;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}